{"version":3,"sources":["components/Navbar.tsx","store/types/encyclopedia.ts","store/actions/encyclopedia.ts","components/Header.tsx","components/HomepageSelect.tsx","components/Spinner.tsx","components/SearchInput.tsx","components/HomepageCard.tsx","img/character.png","img/planet.png","img/species.png","img/starship.png","pages/Homepage.tsx","components/DetailsElement.tsx","pages/Characters.tsx","pages/Planets.tsx","pages/Species.tsx","pages/Starships.tsx","components/Routes.tsx","App.tsx","store/reducers/encyclopedia.ts","store/reducers/index.ts","store/store.ts","index.tsx"],"names":["Navbar","className","GET_ENCYCLOPEDIA_DATA","SET_ENCYCLOPEDIA_REQUEST","SET_ENCYCLOPEDIA_ERROR","SET_ENCYCLOPEDIA_FILTER","fetchData","url","a","page","result","fetch","method","res","json","data","push","results","next","console","error","err","Error","Header","HomepageSelect","title","image","customClass","active","setActive","role","onClick","aria-checked","src","alt","Spinner","type","color","height","width","SearchInput","onSubmit","search","useState","value","setValue","onChange","e","target","name","placeholder","HomepageCard","children","to","Homepage","setSearch","elements","setElements","encyclopedia","useSelector","state","dispatch","useDispatch","location","useLocation","history","useHistory","handleSetElements","useCallback","filter","handleChangeFilter","payload","setEncyclopediaFilter","renderCard","element","gender","climate","population","classification","language","model","hyperdrive_rating","useEffect","fetched","characters","planets","species","starships","from","pathname","filteredElements","el","toLowerCase","characterImg","planetImg","speciesImg","starshipImg","loading","length","map","DetailsElement","Characters","setElement","setName","params","useParams","getElement","name_","tempEl","find","character","hair_color","skin_color","eye_color","birth_year","films","toString","Planets","rotation_period","orbital_period","diameter","gravity","surface_water","SpeciesPage","designation","average_height","skin_colors","hair_colors","eye_colors","average_lifespan","Starships","cost_in_credits","max_atmosphering_speed","crew","passengers","cargo_capacity","consumables","MGLT","starship_class","Routes","exact","path","component","Species","App","initState","rootReducer","combineReducers","action","middlewares","thunk","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"wTAceA,G,MAVU,WACvB,OACE,qBAAKC,UAAU,SAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,oBAAIA,UAAU,gBAAd,0C,8CCRKC,EAAwB,wBACxBC,EAA2B,2BAC3BC,EAAyB,yBACzBC,EAA0B,0BCejCC,EAAS,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,+DAEVC,EAAO,EAELC,EAAiB,GAJT,uBAOMC,MAAM,GAAD,OAAIJ,EAAJ,iBAAgBE,GAAQ,CAC7CG,OAAQ,QARE,cAONC,EAPM,gBAUCA,EAAIC,OAVL,OAUZC,EAVY,OAWZL,EAAOM,KAAP,MAAAN,EAAM,YAASK,EAAKE,UACpBR,GAAQ,EAZI,WAaLM,EAAKG,KAbA,iDAePR,GAfO,wCAiBdS,QAAQC,MAAM,CAAEC,IAAG,OACb,IAAIC,MAAM,sCAlBF,0DAAH,sDCHAC,G,MAXU,WACvB,OACE,wBAAQtB,UAAU,SAAlB,SACE,qBAAIA,UAAU,kBAAd,UACE,oDACA,yDCyBOuB,EAxBuC,SAAC,GAMhD,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,OACAC,EACI,EADJA,UAEA,OACE,sBACEC,KAAK,SACL7B,UAAS,6CAAwC0B,EAAxC,YACPC,EAAS,SAAW,IAEtBG,QAASF,EACTG,eAAcJ,EANhB,UAQE,qBAAK3B,UAAU,yBAAf,SACE,qBAAKgC,IAAKP,EAAOQ,IAAI,OAEvB,oBAAIjC,UAAU,yBAAd,SAAwCwB,Q,iBClB/BU,EARW,WACxB,OACE,qBAAKlC,UAAU,UAAf,SACE,cAAC,IAAD,CAAQmC,KAAK,OAAOC,MAAM,UAAUC,OAAQ,IAAKC,MAAO,SC0B/CC,G,MAvBiC,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAAa,EAC9CC,mBAASD,GADqC,mBACjEE,EADiE,KAC1DC,EAD0D,KAQxE,OACE,qBAAK5C,UAAU,SAAf,SACE,+BACE,uBACEmC,KAAK,OACLQ,MAAOA,EACPE,SAXkB,SAACC,GACzBF,EAASE,EAAEC,OAAOJ,OAClBH,EAASM,EAAEC,OAAOJ,QAUZK,KAAK,SACLC,YAAY,yBCDPC,EAhBmC,SAAC,GAI5C,IAHLF,EAGI,EAHJA,KACAG,EAEI,EAFJA,SACAhB,EACI,EADJA,KAEA,OACE,sBAAKnC,UAAU,iBAAf,UACE,oBAAIA,UAAU,sBAAd,SAAqCgD,IACrC,sBAAKhD,UAAU,yBAAf,UACGmD,EACD,cAAC,IAAD,CAAMC,GAAE,UAAKjB,EAAL,YAAaa,GAArB,iCClBO,G,MAAA,IAA0B,uCCA1B,MAA0B,mCCA1B,MAA0B,oCCA1B,MAA0B,qCC0L1BK,EA/JY,WAAO,IAAD,EACHX,mBAAS,IADN,mBACxBD,EADwB,KAChBa,EADgB,OAECZ,mBAAwB,IAFzB,mBAExBa,EAFwB,KAEdC,EAFc,KAGzBC,EAAeC,aAAY,SAACC,GAAD,OAAsBA,EAAMF,gBAEvDG,EAAWC,cACXC,EAAWC,cACXC,EAAUC,cAMVC,EAAoBC,uBAAY,WACpCX,EAAYC,EAAaA,EAAaW,WACrC,CAACZ,EAAaC,IAEXY,EAAqB,SAACD,GAC1BR,EV0BiC,SACnCQ,GAEA,MAAO,CACLjC,KAAM/B,EACNkE,QAASF,GU/BAG,CAAsBH,KAI3BI,EAAa,SAACC,GAClB,OAAQhB,EAAaW,QACnB,IAAK,aACH,OACE,qCACE,oBAAGpE,UAAU,sBAAb,UACE,2CADF,IACwByE,EAAQC,UAEhC,oBAAG1E,UAAU,sBAAb,UACE,2CADF,IACwByE,EAAQpC,aAItC,IAAK,UACH,OACE,qCACE,oBAAGrC,UAAU,sBAAb,UACE,4CADF,IACyByE,EAAQE,WAEjC,oBAAG3E,UAAU,sBAAb,UACE,+CADF,IAC4ByE,EAAQG,iBAI1C,IAAK,UACH,OACE,qCACE,oBAAG5E,UAAU,sBAAb,UACE,mDADF,IACgCyE,EAAQI,kBAExC,oBAAG7E,UAAU,sBAAb,UACE,6CADF,IAC0ByE,EAAQK,eAIxC,IAAK,YACH,OACE,qCACE,oBAAG9E,UAAU,sBAAb,UACE,0CADF,IACuByE,EAAQM,SAE/B,oBAAG/E,UAAU,sBAAb,UACE,sDADF,IACmCyE,EAAQO,wBAIjD,QACE,OAAO,+BAIbC,qBAAU,WACHxB,EAAayB,SAChBtB,EV7DJ,uCAAO,WAAOA,GAAP,qBAAArD,EAAA,6DACLqD,EAAS,CACPzB,KAAMjC,EACNoE,SAAS,IAHN,kBAMsBjE,EAAU,gCANhC,cAMG8E,EANH,gBAOmB9E,EAAU,iCAP7B,cAOG+E,EAPH,iBAQmB/E,EAAU,iCAR7B,eAQGgF,EARH,iBASqBhF,EAAU,mCAT/B,QASGiF,EATH,OAWH1B,EAAS,CACPzB,KAAMlC,EACNqE,QAAS,CACPc,UACAD,aACAE,UACAC,eAjBD,kDAqBHpE,QAAQC,MAAR,MACAyC,EAAS,CACPzB,KAAMhC,EACNmE,SAAS,IAxBR,0DAAP,yDU+DG,CAACV,EAAUH,EAAayB,UAE3BD,qBAAU,WACRf,MACC,CAACA,IAEJe,qBAAU,WAAO,IAAD,KACd,UAAInB,EAASH,aAAb,iBAAI,EAAgB4B,YAApB,aAAI,EAAsBC,WACxBxB,EAAQjD,KAAK+C,EAASH,MAAM4B,KAAKC,YAElC,CAAC1B,EAAUE,IAEd,IAAMyB,EAAgB,OAAGlC,QAAH,IAAGA,OAAH,EAAGA,EAAUa,QACjC,SAACsB,GAAD,OAAQA,EAAG1C,KAAK2C,cAAclD,OAAOA,EAAOkD,gBAAkB,KAGhE,OACE,qCACE,cAAC,EAAD,IACA,uBAAM3F,UAAU,OAAhB,UACE,qBAAKA,UAAU,qBACf,0BAASA,UAAU,WAAnB,UACE,sBAAKA,UAAU,4BAAf,UACE,sBAAKA,UAAU,2BAAf,UACE,cAAC,EAAD,CACEwB,MAAM,aACNC,MAAOmE,EACPlE,YAAY,aACZC,OAAgC,eAAxB8B,EAAaW,OACrBxC,UAAW,kBAAMyC,EAAmB,iBAEtC,cAAC,EAAD,CACE7C,MAAM,UACNC,MAAOoE,EACPnE,YAAY,UACZC,OAAgC,YAAxB8B,EAAaW,OACrBxC,UAAW,kBAAMyC,EAAmB,iBAGxC,sBAAKrE,UAAU,2BAAf,UACE,cAAC,EAAD,CACEwB,MAAM,UACNC,MAAOqE,EACPpE,YAAY,UACZC,OAAgC,YAAxB8B,EAAaW,OACrBxC,UAAW,kBAAMyC,EAAmB,cAEtC,cAAC,EAAD,CACE7C,MAAM,YACNC,MAAOsE,EACPrE,YAAY,YACZC,OAAgC,cAAxB8B,EAAaW,OACrBxC,UAAW,kBAAMyC,EAAmB,sBAI1C,cAAC,EAAD,CAAa7B,SA5HQ,SAACG,GAC5BW,EAAUX,IA2HyCF,OAAQA,IACpDgB,EAAauC,QACZ,cAAC,EAAD,IAEA,yBAAShG,UAAU,kBAAnB,SACGyF,GAAoBA,EAAiBQ,OAAS,EAA9C,OACCR,QADD,IACCA,OADD,EACCA,EAAkBS,KAAI,SAACR,GAAD,OACpB,cAAC,EAAD,CAEE1C,KAAM0C,EAAG1C,KACTb,KAAMsB,EAAaW,OAHrB,SAKGI,EAAWkB,IAJPA,EAAG1C,SAQZ,oBAAIhD,UAAU,wBAAd,2CChKDmG,EATuC,SAAC,GAAsB,IAApB3E,EAAmB,EAAnBA,MAAOmB,EAAY,EAAZA,MAC9D,OACE,sBAAK3C,UAAU,mBAAf,UACE,+BAAOwB,IACNmB,MCuFQyD,G,MA7Ec,WAAO,IAAD,EACH1D,mBAA2B,MADxB,mBAC1B+B,EAD0B,KACjB4B,EADiB,OAET3D,mBAAS,IAFA,mBAE1BM,EAF0B,KAEpBsD,EAFoB,KAGzBnB,EAAezB,aAAY,SAACC,GAAD,OAAsBA,EAAMF,gBAAvD0B,WAEFoB,EAASC,cACTxC,EAAUC,cAEVwC,EAAatC,sBAAW,uCAC5B,WAAOuC,GAAP,mBAAAnG,EAAA,2DACQoG,EADR,OACiBxB,QADjB,IACiBA,OADjB,EACiBA,EAAYyB,MAAK,SAAClB,GAAD,OAAQA,EAAG1C,OAAS0D,MADtD,uBAGIL,EAAWM,GAHf,mDAQsBjG,MAAM,uCAAD,OACkBgG,GACvC,CACE/F,OAAQ,QAXhB,cAQUC,EARV,iBAcsCA,EAAIC,OAd1C,WAgBqC,KAF3BgG,EAdV,QAgBkB7F,QAAQiF,OAhB1B,wBAiBMjC,EAAQjD,KAAK,KAjBnB,2BAqBIsF,EAAWQ,EAAU7F,QAAQ,IArBjC,kDAuBIgD,EAAQjD,KAAK,KAvBjB,0DAD4B,sDA2B5B,CAACoE,EAAYnB,IAQf,OALAiB,qBAAU,WACRwB,EAAWF,EAAOvD,MAClBsD,EAAQC,EAAOvD,QACd,CAACuD,EAAOvD,KAAMyD,IAGf,qCACE,cAAC,EAAD,IACA,uBAAMzG,UAAU,OAAhB,UACE,qBAAKA,UAAU,qBACf,0BAASA,UAAU,UAAnB,UACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,IAAD,CAAMoD,GAAG,IAAT,kBADF,MAC6B,8CAD7B,KACuD,IACrD,+BAAOJ,OAERyB,GACC,sBAAKzE,UAAU,mBAAf,UACE,cAAC,EAAD,CAAgBwB,MAAM,QAAQmB,MAAO8B,EAAQzB,OAC7C,cAAC,EAAD,CAAgBxB,MAAM,UAAUmB,MAAO8B,EAAQpC,SAC/C,cAAC,EAAD,CAAgBb,MAAM,cAAcmB,MAAO8B,EAAQqC,aACnD,cAAC,EAAD,CAAgBtF,MAAM,cAAcmB,MAAO8B,EAAQsC,aACnD,cAAC,EAAD,CAAgBvF,MAAM,aAAamB,MAAO8B,EAAQuC,YAClD,cAAC,EAAD,CAAgBxF,MAAM,cAAcmB,MAAO8B,EAAQwC,aACnD,cAAC,EAAD,CAAgBzF,MAAM,UAAUmB,MAAO8B,EAAQC,SAC/C,cAAC,EAAD,CACElD,MAAM,mBACNmB,MAAO8B,EAAQyC,MAAMjB,OAAOkB,gBAIlC,cAAC,IAAD,CAAM/D,GAAG,IAAIpD,UAAU,gBAAvB,6BCmBKoH,EAvFW,WAAO,IAAD,EACA1E,mBAAwB,MADxB,mBACvB+B,EADuB,KACd4B,EADc,OAEN3D,mBAAS,IAFH,mBAEvBM,EAFuB,KAEjBsD,EAFiB,KAGtBlB,EAAY1B,aAAY,SAACC,GAAD,OAAsBA,EAAMF,gBAApD2B,QAEFmB,EAASC,cACTxC,EAAUC,cAEVwC,EAAatC,sBAAW,uCAC5B,WAAOuC,GAAP,mBAAAnG,EAAA,2DACQoG,EADR,OACiBvB,QADjB,IACiBA,OADjB,EACiBA,EAASwB,MAAK,SAAClB,GAAD,OAAQA,EAAG1C,OAAS0D,MADnD,uBAGIL,EAAWM,GAHf,mDAQsBjG,MAAM,wCAAD,OACmBgG,GACxC,CACE/F,OAAQ,QAXhB,cAQUC,EARV,iBAcsCA,EAAIC,OAd1C,WAgBqC,KAF3BgG,EAdV,QAgBkB7F,QAAQiF,OAhB1B,wBAiBMjC,EAAQjD,KAAK,KAjBnB,2BAqBIsF,EAAWQ,EAAU7F,QAAQ,IArBjC,kDAuBIgD,EAAQjD,KAAK,KAvBjB,0DAD4B,sDA2B5B,CAACqE,EAASpB,IAQZ,OALAiB,qBAAU,WACRwB,EAAWF,EAAOvD,MAClBsD,EAAQC,EAAOvD,QACd,CAACuD,EAAOvD,KAAMyD,IAGf,qCACE,cAAC,EAAD,IACA,uBAAMzG,UAAU,OAAhB,UACE,qBAAKA,UAAU,qBACf,0BAASA,UAAU,UAAnB,UACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,IAAD,CAAMoD,GAAG,IAAT,kBADF,MAC6B,2CAD7B,KACoD,IAClD,+BAAOJ,OAERyB,GACC,sBAAKzE,UAAU,mBAAf,UACE,cAAC,EAAD,CAAgBwB,MAAM,QAAQmB,MAAO8B,EAAQzB,OAC7C,cAAC,EAAD,CACExB,MAAM,mBACNmB,MAAO8B,EAAQ4C,kBAEjB,cAAC,EAAD,CACE7F,MAAM,kBACNmB,MAAO8B,EAAQ6C,iBAEjB,cAAC,EAAD,CAAgB9F,MAAM,YAAYmB,MAAO8B,EAAQ8C,WACjD,cAAC,EAAD,CAAgB/F,MAAM,WAAWmB,MAAO8B,EAAQE,UAChD,cAAC,EAAD,CAAgBnD,MAAM,WAAWmB,MAAO8B,EAAQ+C,UAChD,cAAC,EAAD,CACEhG,MAAM,iBACNmB,MAAO8B,EAAQgD,gBAEjB,cAAC,EAAD,CAAgBjG,MAAM,cAAcmB,MAAO8B,EAAQG,aACnD,cAAC,EAAD,CACEpD,MAAM,mBACNmB,MAAO8B,EAAQyC,MAAMjB,OAAOkB,gBAIlC,cAAC,IAAD,CAAM/D,GAAG,IAAIpD,UAAU,gBAAvB,4BCeK0H,EA7Fe,WAAO,IAAD,EACJhF,mBAAyB,MADrB,mBAC3B+B,EAD2B,KAClB4B,EADkB,OAEV3D,mBAAS,IAFC,mBAE3BM,EAF2B,KAErBsD,EAFqB,KAG1BjB,EAAY3B,aAAY,SAACC,GAAD,OAAsBA,EAAMF,gBAApD4B,QAEFkB,EAASC,cACTxC,EAAUC,cAEVwC,EAAatC,sBAAW,uCAC5B,WAAOuC,GAAP,mBAAAnG,EAAA,2DACQoG,EADR,OACiBtB,QADjB,IACiBA,OADjB,EACiBA,EAASuB,MAAK,SAAClB,GAAD,OAAQA,EAAG1C,OAAS0D,MADnD,uBAGIL,EAAWM,GAHf,mDAQsBjG,MAAM,wCAAD,OACmBgG,GACxC,CACE/F,OAAQ,QAXhB,cAQUC,EARV,iBAcsCA,EAAIC,OAd1C,WAgBqC,KAF3BgG,EAdV,QAgBkB7F,QAAQiF,OAhB1B,wBAiBMjC,EAAQjD,KAAK,KAjBnB,2BAqBIsF,EAAWQ,EAAU7F,QAAQ,IArBjC,kDAuBIgD,EAAQjD,KAAK,KAvBjB,0DAD4B,sDA2B5B,CAACsE,EAASrB,IAQZ,OALAiB,qBAAU,WACRwB,EAAWF,EAAOvD,MAClBsD,EAAQC,EAAOvD,QACd,CAACuD,EAAOvD,KAAMyD,IAGf,qCACE,cAAC,EAAD,IACA,uBAAMzG,UAAU,OAAhB,UACE,qBAAKA,UAAU,qBACf,0BAASA,UAAU,UAAnB,UACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,IAAD,CAAMoD,GAAG,IAAT,kBADF,MAC6B,2CAD7B,KACoD,IAClD,+BAAOJ,OAERyB,GACC,sBAAKzE,UAAU,mBAAf,UACE,cAAC,EAAD,CAAgBwB,MAAM,QAAQmB,MAAO8B,EAAQzB,OAC7C,cAAC,EAAD,CACExB,MAAM,kBACNmB,MAAO8B,EAAQI,iBAEjB,cAAC,EAAD,CACErD,MAAM,eACNmB,MAAO8B,EAAQkD,cAEjB,cAAC,EAAD,CACEnG,MAAM,kBACNmB,MAAO8B,EAAQmD,iBAEjB,cAAC,EAAD,CACEpG,MAAM,eACNmB,MAAO8B,EAAQoD,cAEjB,cAAC,EAAD,CACErG,MAAM,eACNmB,MAAO8B,EAAQqD,cAEjB,cAAC,EAAD,CAAgBtG,MAAM,cAAcmB,MAAO8B,EAAQsD,aACnD,cAAC,EAAD,CACEvG,MAAM,oBACNmB,MAAO8B,EAAQuD,mBAEjB,cAAC,EAAD,CAAgBxG,MAAM,YAAYmB,MAAO8B,EAAQK,cAGrD,cAAC,IAAD,CAAM1B,GAAG,IAAIpD,UAAU,gBAAvB,4BCYKiI,EAhGa,WAAO,IAAD,EACFvF,mBAA0B,MADxB,mBACzB+B,EADyB,KAChB4B,EADgB,OAER3D,mBAAS,IAFD,mBAEzBM,EAFyB,KAEnBsD,EAFmB,KAGxBhB,EAAc5B,aAAY,SAACC,GAAD,OAAsBA,EAAMF,gBAAtD6B,UAEFiB,EAASC,cACTxC,EAAUC,cAEVwC,EAAatC,sBAAW,uCAC5B,WAAOuC,GAAP,mBAAAnG,EAAA,2DACQoG,EADR,OACiBrB,QADjB,IACiBA,OADjB,EACiBA,EAAWsB,MAAK,SAAClB,GAAD,OAAQA,EAAG1C,OAAS0D,MADrD,uBAGIL,EAAWM,GAHf,mDAQsBjG,MAAM,0CAAD,OACqBgG,GAC1C,CACE/F,OAAQ,QAXhB,cAQUC,EARV,iBAcsCA,EAAIC,OAd1C,WAgBqC,KAF3BgG,EAdV,QAgBkB7F,QAAQiF,OAhB1B,wBAiBMjC,EAAQjD,KAAK,KAjBnB,2BAqBIsF,EAAWQ,EAAU7F,QAAQ,IArBjC,kDAuBIgD,EAAQjD,KAAK,KAvBjB,0DAD4B,sDA2B5B,CAACuE,EAAWtB,IAQd,OALAiB,qBAAU,WACRwB,EAAWF,EAAOvD,MAClBsD,EAAQC,EAAOvD,QACd,CAACuD,EAAOvD,KAAMyD,IAGf,qCACE,cAAC,EAAD,IACA,uBAAMzG,UAAU,OAAhB,UACE,qBAAKA,UAAU,qBACf,0BAASA,UAAU,UAAnB,UACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,IAAD,CAAMoD,GAAG,IAAT,kBADF,MAC6B,6CAD7B,KACsD,IACpD,+BAAOJ,OAERyB,GACC,sBAAKzE,UAAU,mBAAf,UACE,cAAC,EAAD,CAAgBwB,MAAM,QAAQmB,MAAO8B,EAAQzB,OAC7C,cAAC,EAAD,CAAgBxB,MAAM,SAASmB,MAAO8B,EAAQM,QAC9C,cAAC,EAAD,CACEvD,MAAM,mBACNmB,MAAO8B,EAAQyD,kBAEjB,cAAC,EAAD,CAAgB1G,MAAM,UAAUmB,MAAO8B,EAAQwB,SAC/C,cAAC,EAAD,CACEzE,MAAM,0BACNmB,MAAO8B,EAAQ0D,yBAEjB,cAAC,EAAD,CAAgB3G,MAAM,QAAQmB,MAAO8B,EAAQ2D,OAC7C,cAAC,EAAD,CAAgB5G,MAAM,cAAcmB,MAAO8B,EAAQ4D,aACnD,cAAC,EAAD,CACE7G,MAAM,kBACNmB,MAAO8B,EAAQ6D,iBAEjB,cAAC,EAAD,CACE9G,MAAM,eACNmB,MAAO8B,EAAQ8D,cAEjB,cAAC,EAAD,CACE/G,MAAM,qBACNmB,MAAO8B,EAAQO,oBAEjB,cAAC,EAAD,CAAgBxD,MAAM,QAAQmB,MAAO8B,EAAQ+D,OAC7C,cAAC,EAAD,CACEhH,MAAM,kBACNmB,MAAO8B,EAAQgE,oBAIrB,cAAC,IAAD,CAAMrF,GAAG,IAAIpD,UAAU,gBAAvB,4BCvFK0I,EAbU,WACvB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxF,IACjC,cAAC,IAAD,CAAOuF,KAAK,oBAAoBC,UAAWzC,IAC3C,cAAC,IAAD,CAAOwC,KAAK,iBAAiBC,UAAWzB,IACxC,cAAC,IAAD,CAAOwB,KAAK,iBAAiBC,UAAWC,IACxC,cAAC,IAAD,CAAOF,KAAK,mBAAmBC,UAAWZ,IAC1C,cAAC,IAAD,CAAU7E,GAAG,UCDJ2F,G,MATO,WACpB,OACE,sBAAK/I,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,S,gCCDAgJ,EAA+B,CACnC5D,QAAS,KACTD,WAAY,KACZE,QAAS,KACTC,UAAW,KACXU,SAAS,EACT7E,OAAO,EACP+D,SAAS,EACTd,OAAQ,cCdG6E,EAAcC,0BAAgB,CACzCzF,aDgBa,WAGU,IAFvBE,EAEsB,uDAFKqF,EAC3BG,EACsB,uCACtB,OAAQA,EAAOhH,MACb,KAAKlC,EACH,OAAO,uCACF0D,GACAwF,EAAO7E,SAFZ,IAGE0B,SAAS,EACT7E,OAAO,EACP+D,SAAS,IAEb,KAAKhF,EACH,OAAO,2BACFyD,GADL,IAEEqC,QAASmD,EAAO7E,QAChBnD,OAAO,IAEX,KAAKhB,EACH,OAAO,2BACFwD,GADL,IAEExC,MAAOgI,EAAO7E,QACd0B,SAAS,IAEb,KAAK5F,EACH,OAAO,2BACFuD,GADL,IAEES,OAAQ+E,EAAO7E,UAEnB,QACE,OAAOX,ME7CPyF,EAAc,CAACC,KAENC,wBACbL,EACAM,8BAAoBC,kBAAe,WAAf,EAAmBJ,KCHzCK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINC,SAASC,eAAe,W","file":"static/js/main.f4265fe3.chunk.js","sourcesContent":["import React from 'react';\n\nimport '../styles/Navbar.scss';\n\nconst Navbar: React.FC = () => {\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar__content\">\n        <h2 className=\"navbar__title\">Star Wars Encyclopedia</h2>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","export const GET_ENCYCLOPEDIA_DATA = 'GET_ENCYCLOPEDIA_DATA';\nexport const SET_ENCYCLOPEDIA_REQUEST = 'SET_ENCYCLOPEDIA_REQUEST';\nexport const SET_ENCYCLOPEDIA_ERROR = 'SET_ENCYCLOPEDIA_ERROR';\nexport const SET_ENCYCLOPEDIA_FILTER = 'SET_ENCYCLOPEDIA_FILTER';\n\nexport type Result = (Character | Planet | Species | Starship)[];\nexport type Filter = 'characters' | 'planets' | 'species' | 'starships';\nexport interface Planet {\n  name: string;\n  rotation_period: string;\n  orbital_period: string;\n  diameter: string;\n  climate: string;\n  gravity: string;\n  surface_water: string;\n  population: string;\n  films: string[];\n}\n\nexport interface Character {\n  name: string;\n  height: string;\n  hair_color: string;\n  skin_color: string;\n  eye_color: string;\n  birth_year: string;\n  gender: string;\n  films: string[];\n}\n\nexport interface Species {\n  name: string;\n  classification: string;\n  designation: string;\n  average_height: string;\n  skin_colors: string;\n  hair_colors: string;\n  eye_colors: string;\n  average_lifespan: string;\n  language: string;\n}\n\nexport interface Starship {\n  name: string;\n  model: string;\n  cost_in_credits: string;\n  length: string;\n  max_atmosphering_speed: string;\n  crew: string;\n  passengers: string;\n  cargo_capacity: string;\n  consumables: string;\n  hyperdrive_rating: string;\n  MGLT: string;\n  starship_class: string;\n}\n\nexport interface EncyclopediaData {\n  planets: Planet[];\n  characters: Character[];\n  species: Species[];\n  starships: Starship[];\n}\n\nexport interface EncyclopediaState {\n  planets: null | Planet[];\n  characters: null | Character[];\n  species: null | Species[];\n  starships: null | Starship[];\n  loading: boolean;\n  error: boolean;\n  fetched: boolean;\n  filter: Filter;\n}\n\ninterface GetEncyclopediaDataAction {\n  type: typeof GET_ENCYCLOPEDIA_DATA;\n  payload: EncyclopediaData;\n}\n\ninterface SetEndyclopediaRequest {\n  type: typeof SET_ENCYCLOPEDIA_REQUEST;\n  payload: boolean;\n}\n\ninterface SetEndyclopediaError {\n  type: typeof SET_ENCYCLOPEDIA_ERROR;\n  payload: boolean;\n}\n\ninterface SetEndyclopediaFilter {\n  type: typeof SET_ENCYCLOPEDIA_FILTER;\n  payload: Filter;\n}\n\nexport type EncyclopediaActionTypes =\n  | GetEncyclopediaDataAction\n  | SetEndyclopediaRequest\n  | SetEndyclopediaError\n  | SetEndyclopediaFilter;\n","import {\n  GET_ENCYCLOPEDIA_DATA,\n  SET_ENCYCLOPEDIA_ERROR,\n  SET_ENCYCLOPEDIA_REQUEST,\n  SET_ENCYCLOPEDIA_FILTER,\n  Result,\n  Filter,\n  EncyclopediaActionTypes,\n} from '../types/encyclopedia';\nimport { ThunkInterface } from '../types/index';\n\ninterface Response {\n  count: number;\n  next: string | null;\n  previous: string | null;\n  results: Result;\n}\n\nconst fetchData = async (url: string): Promise<Result> => {\n  try {\n    let page = 1;\n    let data: Response;\n    const result: Result = [];\n\n    do {\n      const res = await fetch(`${url}?page=${page}`, {\n        method: 'GET',\n      });\n      data = await res.json();\n      result.push(...data.results);\n      page += 1;\n    } while (data.next);\n\n    return result;\n  } catch (err) {\n    console.error({ err });\n    throw new Error('Error occured while fetching data.');\n  }\n};\n\nexport const getEncyclopediaDataAction = (): ThunkInterface => {\n  return async (dispatch): Promise<void> => {\n    dispatch({\n      type: SET_ENCYCLOPEDIA_REQUEST,\n      payload: true,\n    });\n    try {\n      const characters = await fetchData('https://swapi.dev/api/people');\n      const planets = await fetchData('https://swapi.dev/api/planets');\n      const species = await fetchData('https://swapi.dev/api/species');\n      const starships = await fetchData('https://swapi.dev/api/starships');\n\n      dispatch({\n        type: GET_ENCYCLOPEDIA_DATA,\n        payload: {\n          planets,\n          characters,\n          species,\n          starships,\n        },\n      });\n    } catch (err) {\n      console.error(err);\n      dispatch({\n        type: SET_ENCYCLOPEDIA_ERROR,\n        payload: true,\n      });\n    }\n  };\n};\n\nexport const setEncyclopediaFilter = (\n  filter: Filter\n): EncyclopediaActionTypes => {\n  return {\n    type: SET_ENCYCLOPEDIA_FILTER,\n    payload: filter,\n  };\n};\n","import React from 'react';\n\nimport '../styles/Header.scss';\n\nconst Header: React.FC = () => {\n  return (\n    <header className=\"header\">\n      <h1 className=\"header__content\">\n        <p>&ldquo;May the force</p>\n        <p>be with you&rdquo;</p>\n      </h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nexport interface HomepageSelectProps {\n  title: string;\n  image: string;\n  customClass: string;\n  active: boolean;\n  setActive: () => void;\n}\n\nconst HomepageSelect: React.FC<HomepageSelectProps> = ({\n  title,\n  image,\n  customClass,\n  active,\n  setActive,\n}) => {\n  return (\n    <div\n      role=\"switch\"\n      className={`homepage__select homepage__select--${customClass} ${\n        active ? 'active' : ''\n      }`}\n      onClick={setActive}\n      aria-checked={active}\n    >\n      <div className=\"homepage__select-iamge\">\n        <img src={image} alt=\"\" />\n      </div>\n      <h4 className=\"homepage__select-title\">{title}</h4>\n    </div>\n  );\n};\n\nexport default HomepageSelect;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\n\nconst Spinner: React.FC = () => {\n  return (\n    <div className=\"spinner\">\n      <Loader type=\"Oval\" color=\"#ffffff\" height={100} width={100} />\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { ChangeEvent, useState } from 'react';\n\nimport '../styles/SearchInput.scss';\n\nexport interface SearchInputProps {\n  onSubmit: (value: string) => void;\n  search: string;\n}\n\nconst SearchInput: React.FC<SearchInputProps> = ({ onSubmit, search }) => {\n  const [value, setValue] = useState(search);\n\n  const handleChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n    onSubmit(e.target.value);\n  };\n\n  return (\n    <div className=\"search\">\n      <form>\n        <input\n          type=\"text\"\n          value={value}\n          onChange={handleChangeValue}\n          name=\"search\"\n          placeholder=\"Search by name\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default SearchInput;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport interface HomepageCardProps {\n  name: string;\n  type: string;\n}\n\nconst HomepageCard: React.FC<HomepageCardProps> = ({\n  name,\n  children,\n  type,\n}) => {\n  return (\n    <div className=\"homepage__card\">\n      <h3 className=\"homepage__card-name\">{name}</h3>\n      <div className=\"homepage__card-content\">\n        {children}\n        <Link to={`${type}/${name}`}>More details</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default HomepageCard;\n","export default __webpack_public_path__ + \"static/media/character.b83d283c.png\";","export default __webpack_public_path__ + \"static/media/planet.1d0d95a5.png\";","export default __webpack_public_path__ + \"static/media/species.eb347031.png\";","export default __webpack_public_path__ + \"static/media/starship.f2bbae07.png\";","import React, { useCallback, useEffect, useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getEncyclopediaDataAction,\n  setEncyclopediaFilter,\n} from '../store/actions/encyclopedia';\nimport { RootState } from '../store/reducers';\nimport { Filter, Result } from '../store/types/encyclopedia';\nimport Header from '../components/Header';\nimport HomepageSelect from '../components/HomepageSelect';\nimport Spinner from '../components/Spinner';\nimport SearchInput from '../components/SearchInput';\nimport HomepageCard from '../components/HomepageCard';\n\nimport '../styles/Homepage.scss';\nimport characterImg from '../img/character.png';\nimport planetImg from '../img/planet.png';\nimport speciesImg from '../img/species.png';\nimport starshipImg from '../img/starship.png';\n\ninterface LocationState {\n  from?: {\n    pathname: string;\n  };\n}\n\nconst Homepage: React.FC = () => {\n  const [search, setSearch] = useState('');\n  const [elements, setElements] = useState<Result | null>([]);\n  const encyclopedia = useSelector((state: RootState) => state.encyclopedia);\n\n  const dispatch = useDispatch();\n  const location = useLocation<LocationState>();\n  const history = useHistory<LocationState>();\n\n  const handleSetSearchValue = (value: string) => {\n    setSearch(value);\n  };\n\n  const handleSetElements = useCallback(() => {\n    setElements(encyclopedia[encyclopedia.filter]);\n  }, [setElements, encyclopedia]);\n\n  const handleChangeFilter = (filter: Filter) => {\n    dispatch(setEncyclopediaFilter(filter));\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const renderCard = (element: any) => {\n    switch (encyclopedia.filter) {\n      case 'characters':\n        return (\n          <>\n            <p className=\"homepage__card-text\">\n              <span>Gender:</span> {element.gender}\n            </p>\n            <p className=\"homepage__card-text\">\n              <span>Height:</span> {element.height}\n            </p>\n          </>\n        );\n      case 'planets':\n        return (\n          <>\n            <p className=\"homepage__card-text\">\n              <span>Climate:</span> {element.climate}\n            </p>\n            <p className=\"homepage__card-text\">\n              <span>Population:</span> {element.population}\n            </p>\n          </>\n        );\n      case 'species':\n        return (\n          <>\n            <p className=\"homepage__card-text\">\n              <span>Classification:</span> {element.classification}\n            </p>\n            <p className=\"homepage__card-text\">\n              <span>Language:</span> {element.language}\n            </p>\n          </>\n        );\n      case 'starships':\n        return (\n          <>\n            <p className=\"homepage__card-text\">\n              <span>Model:</span> {element.model}\n            </p>\n            <p className=\"homepage__card-text\">\n              <span>Hyperdrive rating:</span> {element.hyperdrive_rating}\n            </p>\n          </>\n        );\n      default:\n        return <></>;\n    }\n  };\n\n  useEffect(() => {\n    if (!encyclopedia.fetched) {\n      dispatch(getEncyclopediaDataAction());\n    }\n  }, [dispatch, encyclopedia.fetched]);\n\n  useEffect(() => {\n    handleSetElements();\n  }, [handleSetElements]);\n\n  useEffect(() => {\n    if (location.state?.from?.pathname) {\n      history.push(location.state.from.pathname);\n    }\n  }, [location, history]);\n\n  const filteredElements = elements?.filter(\n    (el) => el.name.toLowerCase().search(search.toLowerCase()) > -1\n  );\n\n  return (\n    <>\n      <Header />\n      <main className=\"main\">\n        <div className=\"main__background\"></div>\n        <section className=\"homepage\">\n          <div className=\"homepage__select-conainer\">\n            <div className=\"homepage__select-section\">\n              <HomepageSelect\n                title=\"Characters\"\n                image={characterImg}\n                customClass=\"characters\"\n                active={encyclopedia.filter === 'characters'}\n                setActive={() => handleChangeFilter('characters')}\n              />\n              <HomepageSelect\n                title=\"Planets\"\n                image={planetImg}\n                customClass=\"planets\"\n                active={encyclopedia.filter === 'planets'}\n                setActive={() => handleChangeFilter('planets')}\n              />\n            </div>\n            <div className=\"homepage__select-section\">\n              <HomepageSelect\n                title=\"Species\"\n                image={speciesImg}\n                customClass=\"species\"\n                active={encyclopedia.filter === 'species'}\n                setActive={() => handleChangeFilter('species')}\n              />\n              <HomepageSelect\n                title=\"Starships\"\n                image={starshipImg}\n                customClass=\"starships\"\n                active={encyclopedia.filter === 'starships'}\n                setActive={() => handleChangeFilter('starships')}\n              />\n            </div>\n          </div>\n          <SearchInput onSubmit={handleSetSearchValue} search={search} />\n          {encyclopedia.loading ? (\n            <Spinner />\n          ) : (\n            <section className=\"homepage__cards\">\n              {filteredElements && filteredElements.length > 0 ? (\n                filteredElements?.map((el) => (\n                  <HomepageCard\n                    key={el.name}\n                    name={el.name}\n                    type={encyclopedia.filter}\n                  >\n                    {renderCard(el)}\n                  </HomepageCard>\n                ))\n              ) : (\n                <h3 className=\"homepage__cards-empty\">No search results</h3>\n              )}\n            </section>\n          )}\n        </section>\n      </main>\n    </>\n  );\n};\n\nexport default Homepage;\n","import React from 'react';\n\nexport interface DetailsElementProps {\n  title: string;\n  value: string;\n}\n\nconst DetailsElement: React.FC<DetailsElementProps> = ({ title, value }) => {\n  return (\n    <div className=\"details__element\">\n      <span>{title}</span>\n      {value}\n    </div>\n  );\n};\n\nexport default DetailsElement;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useHistory, Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../store/reducers';\nimport { Character } from '../store/types/encyclopedia';\nimport Header from '../components/Header';\nimport DetailsElement from '../components/DetailsElement';\n\nimport '../styles/Details.scss';\n\ninterface ParamsType {\n  name: string;\n}\n\ninterface Response {\n  count: number;\n  next: string | null;\n  previous: string | null;\n  results: Character[];\n}\n\nconst Characters: React.FC = () => {\n  const [element, setElement] = useState<null | Character>(null);\n  const [name, setName] = useState('');\n  const { characters } = useSelector((state: RootState) => state.encyclopedia);\n\n  const params = useParams<ParamsType>();\n  const history = useHistory();\n\n  const getElement = useCallback(\n    async (name_: string) => {\n      const tempEl = characters?.find((el) => el.name === name_);\n      if (tempEl) {\n        setElement(tempEl);\n        return;\n      }\n\n      try {\n        const res = await fetch(\n          `https://swapi.dev/api/people?search=${name_}`,\n          {\n            method: 'GET',\n          }\n        );\n        const character: Response = await res.json();\n\n        if (character.results.length === 0) {\n          history.push('/');\n          return;\n        }\n\n        setElement(character.results[0]);\n      } catch (err) {\n        history.push('/');\n      }\n    },\n    [characters, history]\n  );\n\n  useEffect(() => {\n    getElement(params.name);\n    setName(params.name);\n  }, [params.name, getElement]);\n\n  return (\n    <>\n      <Header />\n      <main className=\"main\">\n        <div className=\"main__background\"></div>\n        <section className=\"details\">\n          <div className=\"details__path\">\n            <Link to=\"/\">Home</Link> / <span>Characters</span> /{' '}\n            <span>{name}</span>\n          </div>\n          {element && (\n            <div className=\"details__content\">\n              <DetailsElement title=\"Name:\" value={element.name} />\n              <DetailsElement title=\"Height:\" value={element.height} />\n              <DetailsElement title=\"Hair color:\" value={element.hair_color} />\n              <DetailsElement title=\"Skin color:\" value={element.skin_color} />\n              <DetailsElement title=\"Eye color:\" value={element.eye_color} />\n              <DetailsElement title=\"Birth year:\" value={element.birth_year} />\n              <DetailsElement title=\"Gender:\" value={element.gender} />\n              <DetailsElement\n                title=\"Number of films:\"\n                value={element.films.length.toString()}\n              />\n            </div>\n          )}\n          <Link to=\"/\" className=\"details__back\">\n            Back\n          </Link>\n        </section>\n      </main>\n    </>\n  );\n};\n\nexport default Characters;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useHistory, Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../store/reducers';\nimport { Planet } from '../store/types/encyclopedia';\nimport Header from '../components/Header';\nimport DetailsElement from '../components/DetailsElement';\n\nimport '../styles/Details.scss';\n\ninterface ParamsType {\n  name: string;\n}\n\ninterface Response {\n  count: number;\n  next: string | null;\n  previous: string | null;\n  results: Planet[];\n}\n\nconst Planets: React.FC = () => {\n  const [element, setElement] = useState<null | Planet>(null);\n  const [name, setName] = useState('');\n  const { planets } = useSelector((state: RootState) => state.encyclopedia);\n\n  const params = useParams<ParamsType>();\n  const history = useHistory();\n\n  const getElement = useCallback(\n    async (name_: string) => {\n      const tempEl = planets?.find((el) => el.name === name_);\n      if (tempEl) {\n        setElement(tempEl);\n        return;\n      }\n\n      try {\n        const res = await fetch(\n          `https://swapi.dev/api/planets?search=${name_}`,\n          {\n            method: 'GET',\n          }\n        );\n        const character: Response = await res.json();\n\n        if (character.results.length === 0) {\n          history.push('/');\n          return;\n        }\n\n        setElement(character.results[0]);\n      } catch (err) {\n        history.push('/');\n      }\n    },\n    [planets, history]\n  );\n\n  useEffect(() => {\n    getElement(params.name);\n    setName(params.name);\n  }, [params.name, getElement]);\n\n  return (\n    <>\n      <Header />\n      <main className=\"main\">\n        <div className=\"main__background\"></div>\n        <section className=\"details\">\n          <div className=\"details__path\">\n            <Link to=\"/\">Home</Link> / <span>Planets</span> /{' '}\n            <span>{name}</span>\n          </div>\n          {element && (\n            <div className=\"details__content\">\n              <DetailsElement title=\"Name:\" value={element.name} />\n              <DetailsElement\n                title=\"Rotation period:\"\n                value={element.rotation_period}\n              />\n              <DetailsElement\n                title=\"Orbital period:\"\n                value={element.orbital_period}\n              />\n              <DetailsElement title=\"Diameter:\" value={element.diameter} />\n              <DetailsElement title=\"Climate:\" value={element.climate} />\n              <DetailsElement title=\"Gravity:\" value={element.gravity} />\n              <DetailsElement\n                title=\"Surface water:\"\n                value={element.surface_water}\n              />\n              <DetailsElement title=\"Population:\" value={element.population} />\n              <DetailsElement\n                title=\"Number of films:\"\n                value={element.films.length.toString()}\n              />\n            </div>\n          )}\n          <Link to=\"/\" className=\"details__back\">\n            Back\n          </Link>\n        </section>\n      </main>\n    </>\n  );\n};\n\nexport default Planets;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useHistory, Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../store/reducers';\nimport { Species } from '../store/types/encyclopedia';\nimport Header from '../components/Header';\nimport DetailsElement from '../components/DetailsElement';\n\nimport '../styles/Details.scss';\n\ninterface ParamsType {\n  name: string;\n}\n\ninterface Response {\n  count: number;\n  next: string | null;\n  previous: string | null;\n  results: Species[];\n}\n\nconst SpeciesPage: React.FC = () => {\n  const [element, setElement] = useState<null | Species>(null);\n  const [name, setName] = useState('');\n  const { species } = useSelector((state: RootState) => state.encyclopedia);\n\n  const params = useParams<ParamsType>();\n  const history = useHistory();\n\n  const getElement = useCallback(\n    async (name_: string) => {\n      const tempEl = species?.find((el) => el.name === name_);\n      if (tempEl) {\n        setElement(tempEl);\n        return;\n      }\n\n      try {\n        const res = await fetch(\n          `https://swapi.dev/api/species?search=${name_}`,\n          {\n            method: 'GET',\n          }\n        );\n        const character: Response = await res.json();\n\n        if (character.results.length === 0) {\n          history.push('/');\n          return;\n        }\n\n        setElement(character.results[0]);\n      } catch (err) {\n        history.push('/');\n      }\n    },\n    [species, history]\n  );\n\n  useEffect(() => {\n    getElement(params.name);\n    setName(params.name);\n  }, [params.name, getElement]);\n\n  return (\n    <>\n      <Header />\n      <main className=\"main\">\n        <div className=\"main__background\"></div>\n        <section className=\"details\">\n          <div className=\"details__path\">\n            <Link to=\"/\">Home</Link> / <span>Species</span> /{' '}\n            <span>{name}</span>\n          </div>\n          {element && (\n            <div className=\"details__content\">\n              <DetailsElement title=\"Name:\" value={element.name} />\n              <DetailsElement\n                title=\"Classification:\"\n                value={element.classification}\n              />\n              <DetailsElement\n                title=\"Designation:\"\n                value={element.designation}\n              />\n              <DetailsElement\n                title=\"Average height:\"\n                value={element.average_height}\n              />\n              <DetailsElement\n                title=\"Skin colors:\"\n                value={element.skin_colors}\n              />\n              <DetailsElement\n                title=\"Hair colors:\"\n                value={element.hair_colors}\n              />\n              <DetailsElement title=\"Eye colors:\" value={element.eye_colors} />\n              <DetailsElement\n                title=\"Average lifespan:\"\n                value={element.average_lifespan}\n              />\n              <DetailsElement title=\"language:\" value={element.language} />\n            </div>\n          )}\n          <Link to=\"/\" className=\"details__back\">\n            Back\n          </Link>\n        </section>\n      </main>\n    </>\n  );\n};\n\nexport default SpeciesPage;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useHistory, Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../store/reducers';\nimport { Starship } from '../store/types/encyclopedia';\nimport Header from '../components/Header';\nimport DetailsElement from '../components/DetailsElement';\n\nimport '../styles/Details.scss';\n\ninterface ParamsType {\n  name: string;\n}\n\ninterface Response {\n  count: number;\n  next: string | null;\n  previous: string | null;\n  results: Starship[];\n}\n\nconst Starships: React.FC = () => {\n  const [element, setElement] = useState<null | Starship>(null);\n  const [name, setName] = useState('');\n  const { starships } = useSelector((state: RootState) => state.encyclopedia);\n\n  const params = useParams<ParamsType>();\n  const history = useHistory();\n\n  const getElement = useCallback(\n    async (name_: string) => {\n      const tempEl = starships?.find((el) => el.name === name_);\n      if (tempEl) {\n        setElement(tempEl);\n        return;\n      }\n\n      try {\n        const res = await fetch(\n          `https://swapi.dev/api/starships?search=${name_}`,\n          {\n            method: 'GET',\n          }\n        );\n        const character: Response = await res.json();\n\n        if (character.results.length === 0) {\n          history.push('/');\n          return;\n        }\n\n        setElement(character.results[0]);\n      } catch (err) {\n        history.push('/');\n      }\n    },\n    [starships, history]\n  );\n\n  useEffect(() => {\n    getElement(params.name);\n    setName(params.name);\n  }, [params.name, getElement]);\n\n  return (\n    <>\n      <Header />\n      <main className=\"main\">\n        <div className=\"main__background\"></div>\n        <section className=\"details\">\n          <div className=\"details__path\">\n            <Link to=\"/\">Home</Link> / <span>Starships</span> /{' '}\n            <span>{name}</span>\n          </div>\n          {element && (\n            <div className=\"details__content\">\n              <DetailsElement title=\"Name:\" value={element.name} />\n              <DetailsElement title=\"Model:\" value={element.model} />\n              <DetailsElement\n                title=\"Cost in credits:\"\n                value={element.cost_in_credits}\n              />\n              <DetailsElement title=\"Length:\" value={element.length} />\n              <DetailsElement\n                title=\"Max atmosphering speed:\"\n                value={element.max_atmosphering_speed}\n              />\n              <DetailsElement title=\"Crew:\" value={element.crew} />\n              <DetailsElement title=\"Passengers:\" value={element.passengers} />\n              <DetailsElement\n                title=\"Cargo capacity:\"\n                value={element.cargo_capacity}\n              />\n              <DetailsElement\n                title=\"Consumables:\"\n                value={element.consumables}\n              />\n              <DetailsElement\n                title=\"Hyperdrive rating:\"\n                value={element.hyperdrive_rating}\n              />\n              <DetailsElement title=\"MGLT:\" value={element.MGLT} />\n              <DetailsElement\n                title=\"Starship class:\"\n                value={element.starship_class}\n              />\n            </div>\n          )}\n          <Link to=\"/\" className=\"details__back\">\n            Back\n          </Link>\n        </section>\n      </main>\n    </>\n  );\n};\n\nexport default Starships;\n","import React from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport Homepage from '../pages/Homepage';\nimport Characters from '../pages/Characters';\nimport Planets from '../pages/Planets';\nimport Species from '../pages/Species';\nimport Starships from '../pages/Starships';\n\nconst Routes: React.FC = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Homepage} />\n      <Route path=\"/characters/:name\" component={Characters} />\n      <Route path=\"/planets/:name\" component={Planets} />\n      <Route path=\"/species/:name\" component={Species} />\n      <Route path=\"/starships/:name\" component={Starships} />\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport Navbar from './components/Navbar';\nimport Routes from './components/Routes';\n\nimport './styles/Main.scss';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Routes />\n    </div>\n  );\n};\n\nexport default App;\n","import {\n  EncyclopediaState,\n  EncyclopediaActionTypes,\n  GET_ENCYCLOPEDIA_DATA,\n  SET_ENCYCLOPEDIA_ERROR,\n  SET_ENCYCLOPEDIA_REQUEST,\n  SET_ENCYCLOPEDIA_FILTER,\n} from '../types/encyclopedia';\n\nconst initState: EncyclopediaState = {\n  planets: null,\n  characters: null,\n  species: null,\n  starships: null,\n  loading: true,\n  error: false,\n  fetched: false,\n  filter: 'characters',\n};\n\nexport default (\n  state: EncyclopediaState = initState,\n  action: EncyclopediaActionTypes\n): EncyclopediaState => {\n  switch (action.type) {\n    case GET_ENCYCLOPEDIA_DATA:\n      return {\n        ...state,\n        ...action.payload,\n        loading: false,\n        error: false,\n        fetched: true,\n      };\n    case SET_ENCYCLOPEDIA_REQUEST:\n      return {\n        ...state,\n        loading: action.payload,\n        error: false,\n      };\n    case SET_ENCYCLOPEDIA_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    case SET_ENCYCLOPEDIA_FILTER:\n      return {\n        ...state,\n        filter: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport encyclopediaReducer from './encyclopedia';\n\nexport const rootReducer = combineReducers({\n  encyclopedia: encyclopediaReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { rootReducer } from './reducers/index';\n\nconst middlewares = [thunk];\n\nexport default createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}